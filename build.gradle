buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'de.fuerstenau.buildconfig' version '1.1.8'
    id 'idea'
    id 'net.minecraftforge.gradle.forge' version '2.0.2'
}

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.mc_version + '-' + config.mod_version
group = config.mod_group
archivesBaseName = config.mod_name

if (System.getenv().BUILD_NUMBER)
	version = "${version}.${System.getenv().BUILD_NUMBER}"

if (!project.hasProperty('signingKeystore')) {
    project.properties.put('signingFingerprint', 'unsigned')
    version = version + '-unsigned'
}

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
	version = "${config.mc_version}-${config.forge_version}"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20170624"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
	testCompile "junit:junit:4.11"
    testCompile 'org.mockito:mockito-core:2.7.22'
}

buildConfig {
    sourceSets{
        appName = config.mod_name
        main {
            buildConfigField "String", "acceptedVersions", config.accepted_versions
                buildConfigField "String", "fingerprint", project.findProperty('signingFingerprint')
                buildConfigField "String", "updateJSON",
                        config.update_url +
                                '?mkver=' + project.version +
                                '&mcver=' + config.mc_version +
                                '&fmver=' + config.forge_version +
                                '&fngpt=' + project.findProperty('signingFingerprint')
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "mod_version", project.version
    inputs.property "mod_name", config.mod_name
    inputs.property "mc_version", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace variable
        expand 'mod_name':config.mod_name, 'mod_version':project.version, 'mc_version':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(dependsOn: ['jar']){
    doLast {
        // Skip the task if our secret data isn't available
        if (project.hasProperty('signingKeystore')) {
            ant.signjar(
                    destDir: "$buildDir/libs",
                    jar: "$buildDir/libs/*.jar",
                    alias: signingAlias,
                    storetype: "jks",
                    keystore: signingKeystore,
                    storepass: signingPassword
            )
        } else {
            println("Skipping jar signing. Signing keystore isn't available.")
        }
    }
}
build.dependsOn signJar